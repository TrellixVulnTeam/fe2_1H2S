{"ast":null,"code":"const fs = require('fs');\n\nconst {\n  RawSource,\n  SourceMapSource\n} = require('webpack-sources');\n\nconst encoding = require('encoding');\n\nconst {\n  ModuleFilenameHelpers\n} = require('webpack');\n\nconst DEFAULT_OPTIONS = {\n  test: /(\\.js|\\.css)($|\\?)/i\n};\n\nclass EncodingPlugin {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = { ...DEFAULT_OPTIONS,\n      ...(typeof options === 'string' ? {\n        encoding: options\n      } : options)\n    };\n  }\n\n  apply(compiler) {\n    const {\n      options\n    } = this;\n    const matchFileName = ModuleFilenameHelpers.matchObject.bind(undefined, options);\n    compiler.hooks.emit.tapAsync('EncodingPlugin', (_ref, callback) => {\n      let {\n        assets,\n        errors\n      } = _ref;\n      Object.keys(assets).filter(matchFileName).forEach(file => {\n        const asset = assets[file];\n        let source;\n        let map;\n\n        try {\n          if (asset.sourceAndMap) {\n            const sourceAndMap = asset.sourceAndMap();\n            source = sourceAndMap.source;\n            map = sourceAndMap.map;\n          } else {\n            source = asset.source();\n            map = typeof asset.map === 'function' ? asset.map() : null;\n          }\n\n          const encodedSource = encoding.convert(source, options.encoding, 'UTF-8');\n\n          if (asset.existsAt && fs.existsSync(asset.existsAt)) {\n            fs.writeFileSync(asset.existsAt, encodedSource);\n          }\n\n          assets[file] = map ? new SourceMapSource(encodedSource, file, map) : new RawSource(encodedSource);\n        } catch (e) {\n          errors.push(new Error(`${file} from EncodingPlugin: ${e.message}`));\n        }\n      });\n      callback();\n    });\n  }\n\n}\n\nmodule.exports = EncodingPlugin;","map":{"version":3,"names":["fs","require","RawSource","SourceMapSource","encoding","ModuleFilenameHelpers","DEFAULT_OPTIONS","test","EncodingPlugin","constructor","options","apply","compiler","matchFileName","matchObject","bind","undefined","hooks","emit","tapAsync","callback","assets","errors","Object","keys","filter","forEach","file","asset","source","map","sourceAndMap","encodedSource","convert","existsAt","existsSync","writeFileSync","e","push","Error","message","module","exports"],"sources":["C:/Users/nvdun/Documents/Zalo Received Files/covid_19_ProjectFE2/node_modules/webpack-encoding-plugin/EncodingPlugin.js"],"sourcesContent":["const fs = require('fs');\nconst { RawSource, SourceMapSource } = require('webpack-sources');\nconst encoding = require('encoding');\nconst { ModuleFilenameHelpers } = require('webpack');\n\nconst DEFAULT_OPTIONS = {\n    test: /(\\.js|\\.css)($|\\?)/i,\n};\n\nclass EncodingPlugin {\n    constructor(options = {}) {\n        this.options = {\n            ...DEFAULT_OPTIONS,\n            ...(typeof options === 'string' ? { encoding: options } : options),\n        };\n    }\n\n    apply(compiler) {\n        const { options } = this;\n        const matchFileName = ModuleFilenameHelpers.matchObject.bind(undefined, options);\n\n        compiler.hooks.emit.tapAsync('EncodingPlugin', ({ assets, errors }, callback) => {\n            Object.keys(assets).filter(matchFileName).forEach(file => {\n                const asset = assets[file];\n                let source;\n                let map;\n                try {\n                    if (asset.sourceAndMap) {\n                        const sourceAndMap = asset.sourceAndMap();\n                        source = sourceAndMap.source;\n                        map = sourceAndMap.map;\n                    } else {\n                        source = asset.source();\n                        map = typeof asset.map === 'function' ?\n                            asset.map() :\n                            null;\n                    }\n\n                    const encodedSource = encoding.convert(source, options.encoding, 'UTF-8');\n                    if (asset.existsAt && fs.existsSync(asset.existsAt)) {\n                        fs.writeFileSync(asset.existsAt, encodedSource);\n                    }\n\n                    assets[file] = map ?\n                        new SourceMapSource(encodedSource, file, map) :\n                        new RawSource(encodedSource);\n                } catch (e) {\n                    errors.push(new Error(`${file} from EncodingPlugin: ${e.message}`));\n                }\n            });\n\n            callback();\n        });\n    }\n}\n\nmodule.exports = EncodingPlugin;\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAM;EAAEC,SAAF;EAAaC;AAAb,IAAiCF,OAAO,CAAC,iBAAD,CAA9C;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAM;EAAEI;AAAF,IAA4BJ,OAAO,CAAC,SAAD,CAAzC;;AAEA,MAAMK,eAAe,GAAG;EACpBC,IAAI,EAAE;AADc,CAAxB;;AAIA,MAAMC,cAAN,CAAqB;EACjBC,WAAW,GAAe;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACtB,KAAKA,OAAL,GAAe,EACX,GAAGJ,eADQ;MAEX,IAAI,OAAOI,OAAP,KAAmB,QAAnB,GAA8B;QAAEN,QAAQ,EAAEM;MAAZ,CAA9B,GAAsDA,OAA1D;IAFW,CAAf;EAIH;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACZ,MAAM;MAAEF;IAAF,IAAc,IAApB;IACA,MAAMG,aAAa,GAAGR,qBAAqB,CAACS,WAAtB,CAAkCC,IAAlC,CAAuCC,SAAvC,EAAkDN,OAAlD,CAAtB;IAEAE,QAAQ,CAACK,KAAT,CAAeC,IAAf,CAAoBC,QAApB,CAA6B,gBAA7B,EAA+C,OAAqBC,QAArB,KAAkC;MAAA,IAAjC;QAAEC,MAAF;QAAUC;MAAV,CAAiC;MAC7EC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,MAApB,CAA2BZ,aAA3B,EAA0Ca,OAA1C,CAAkDC,IAAI,IAAI;QACtD,MAAMC,KAAK,GAAGP,MAAM,CAACM,IAAD,CAApB;QACA,IAAIE,MAAJ;QACA,IAAIC,GAAJ;;QACA,IAAI;UACA,IAAIF,KAAK,CAACG,YAAV,EAAwB;YACpB,MAAMA,YAAY,GAAGH,KAAK,CAACG,YAAN,EAArB;YACAF,MAAM,GAAGE,YAAY,CAACF,MAAtB;YACAC,GAAG,GAAGC,YAAY,CAACD,GAAnB;UACH,CAJD,MAIO;YACHD,MAAM,GAAGD,KAAK,CAACC,MAAN,EAAT;YACAC,GAAG,GAAG,OAAOF,KAAK,CAACE,GAAb,KAAqB,UAArB,GACFF,KAAK,CAACE,GAAN,EADE,GAEF,IAFJ;UAGH;;UAED,MAAME,aAAa,GAAG5B,QAAQ,CAAC6B,OAAT,CAAiBJ,MAAjB,EAAyBnB,OAAO,CAACN,QAAjC,EAA2C,OAA3C,CAAtB;;UACA,IAAIwB,KAAK,CAACM,QAAN,IAAkBlC,EAAE,CAACmC,UAAH,CAAcP,KAAK,CAACM,QAApB,CAAtB,EAAqD;YACjDlC,EAAE,CAACoC,aAAH,CAAiBR,KAAK,CAACM,QAAvB,EAAiCF,aAAjC;UACH;;UAEDX,MAAM,CAACM,IAAD,CAAN,GAAeG,GAAG,GACd,IAAI3B,eAAJ,CAAoB6B,aAApB,EAAmCL,IAAnC,EAAyCG,GAAzC,CADc,GAEd,IAAI5B,SAAJ,CAAc8B,aAAd,CAFJ;QAGH,CApBD,CAoBE,OAAOK,CAAP,EAAU;UACRf,MAAM,CAACgB,IAAP,CAAY,IAAIC,KAAJ,CAAW,GAAEZ,IAAK,yBAAwBU,CAAC,CAACG,OAAQ,EAApD,CAAZ;QACH;MACJ,CA3BD;MA6BApB,QAAQ;IACX,CA/BD;EAgCH;;AA5CgB;;AA+CrBqB,MAAM,CAACC,OAAP,GAAiBlC,cAAjB"},"metadata":{},"sourceType":"script"}