{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tranq\\\\Downloads\\\\covid-19-tracking-main\\\\covid-19-tracking-main\\\\src\\\\components\\\\Charts\\\\HighMaps\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from 'highcharts/modules/map';\nimport { cloneDeep } from 'lodash'; // Load Highcharts modules\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhighchartsMap(Highcharts);\nconst initOptions = {\n  chart: {\n    height: '500'\n  },\n  title: {\n    text: null\n  },\n  mapNavigation: {\n    enabled: true\n  },\n  colorAxis: {\n    min: 0,\n    stops: [[0.2, '#FFC4AA'], [0.4, '#FF8A66'], [0.6, '#FF392B'], [0.8, '#B71525'], [1, '\t#7A0826']]\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'bottom'\n  },\n  series: [{\n    name: 'Dân số',\n    joinBy: ['hc-key', 'key']\n  }]\n};\n\nconst HighMaps = ({\n  mapData\n}) => {\n  _s();\n\n  const [options, setOptions] = useState({});\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (mapData && Object.keys(mapData).length) {\n      console.log({\n        mapData\n      });\n      const fakeData = mapData.features.map((feature, index) => ({\n        key: feature.properties['hc-key'],\n        value: index\n      }));\n      setOptions(() => ({ ...initOptions,\n        title: {\n          text: mapData.title\n        },\n        series: [{ ...initOptions.series[0],\n          mapData: mapData,\n          data: fakeData\n        }]\n      }));\n      if (!mapLoaded) setMapLoaded(true);\n    }\n  }, [mapData, mapLoaded]);\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      chartRef.current.chart.series[0].update({\n        mapData\n      });\n    }\n  }, [options, mapData]);\n  if (!mapLoaded) return null;\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: cloneDeep(options),\n    constructorType: 'mapChart',\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HighMaps, \"0mMz6T6RHKylLlaHccCVrDYoR0Q=\");\n\n_c = HighMaps;\nHighMaps.defaultProps = {\n  mapData: {}\n};\nexport default _c2 = /*#__PURE__*/React.memo(HighMaps);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HighMaps\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/tranq/Downloads/covid-19-tracking-main/covid-19-tracking-main/src/components/Charts/HighMaps/index.js"],"names":["React","useEffect","useRef","useState","Highcharts","HighchartsReact","highchartsMap","cloneDeep","initOptions","chart","height","title","text","mapNavigation","enabled","colorAxis","min","stops","legend","layout","align","verticalAlign","series","name","joinBy","HighMaps","mapData","options","setOptions","mapLoaded","setMapLoaded","chartRef","Object","keys","length","console","log","fakeData","features","map","feature","index","key","properties","value","data","current","update","defaultProps","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from 'highcharts/modules/map';\nimport { cloneDeep } from 'lodash';\n\n// Load Highcharts modules\nhighchartsMap(Highcharts);\n\nconst initOptions = {\n  chart: {\n    height: '500',\n  },\n  title: {\n    text: null,\n  },\n  mapNavigation: {\n    enabled: true,\n  },\n  colorAxis: {\n    min: 0,\n    stops: [\n      [0.2, '#FFC4AA'],\n      [0.4, '#FF8A66'],\n      [0.6, '#FF392B'],\n      [0.8, '#B71525'],\n      [1, '\t#7A0826'],\n    ],\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'bottom',\n  },\n  series: [\n    {\n      name: 'Dân số',\n      joinBy: ['hc-key', 'key'],\n    },\n  ],\n};\n\nconst HighMaps = ({ mapData }) => {\n  const [options, setOptions] = useState({});\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (mapData && Object.keys(mapData).length) {\n      console.log({ mapData });\n      const fakeData = mapData.features.map((feature, index) => ({\n        key: feature.properties['hc-key'],\n        value: index,\n      }));\n\n      setOptions(() => ({\n        ...initOptions,\n        title: {\n          text: mapData.title,\n        },\n        series: [\n          { ...initOptions.series[0], mapData: mapData, data: fakeData },\n        ],\n      }));\n\n      if (!mapLoaded) setMapLoaded(true);\n    }\n  }, [mapData, mapLoaded]);\n\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      chartRef.current.chart.series[0].update({\n        mapData,\n      });\n    }\n  }, [options, mapData]);\n\n  if (!mapLoaded) return null;\n\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={cloneDeep(options)}\n      constructorType={'mapChart'}\n      ref={chartRef}\n    />\n  );\n};\n\nHighMaps.defaultProps = {\n  mapData: {},\n};\n\nexport default React.memo(HighMaps);\n"]},"metadata":{},"sourceType":"module"}