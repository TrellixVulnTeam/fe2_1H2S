{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tranq\\\\Downloads\\\\covid-19-tracking-main\\\\covid_19_ProjectFE2\\\\src\\\\components\\\\Charts\\\\LineChart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst generateOptions = data => {\n  const categories = data.map(item => moment(item.Date).format('DD/MM/YYYY'));\n  return {\n    chart: {\n      height: 500\n    },\n    title: {\n      text: 'Tổng ca nhiễm'\n    },\n    // truc ngang\n    xAxis: {\n      categories: categories,\n      crosshair: true\n    },\n    colors: ['#F3585B'],\n    // truc doc\n    yAxis: {\n      min: 0,\n      title: {\n        text: null\n      },\n      labels: {\n        align: 'right'\n      }\n    },\n    // hien thi thong tin tren bieu do\n    tooltip: {\n      headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n      pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\n      footerFormat: '</table>',\n      shared: true,\n      useHTML: true\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0\n      }\n    },\n    // du lieu truyen vo de hien thi tren linecharts\n    series: [{\n      name: 'Tổng Ca nhiễm',\n      data: data.map(item => item.Confirmed)\n    }]\n  };\n};\n\nexport default function LineChart({\n  data\n}) {\n  _s();\n\n  const [options, setOptions] = useState({});\n  const [reportType, setReportType] = useState('all');\n  console.log({\n    data\n  });\n  useEffect(() => {\n    let customData = [];\n\n    switch (reportType) {\n      case 'all':\n        customData = data;\n        break;\n\n      case '30':\n        customData = data.slice(Math.max(data.length - 30, 1));\n        break;\n\n      case '7':\n        customData = data.slice(Math.max(data.length - 7, 1));\n        break;\n\n      default:\n        customData = data;\n        break;\n    }\n\n    setOptions(generateOptions(customData));\n  }, [data, reportType]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      size: \"small\",\n      \"aria-label\": \"small outlined button group\",\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: reportType === 'all' ? 'secondary' : '',\n        onClick: () => setReportType('all'),\n        children: \"T\\u1EA5t c\\u1EA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: reportType === '30' ? 'secondary' : '',\n        onClick: () => setReportType('30'),\n        children: \"30 ng\\xE0y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: reportType === '7' ? 'secondary' : '',\n        onClick: () => setReportType('7'),\n        children: \"7 ng\\xE0y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), \"d\\u1EEF li\\u1EC7u t\\u1EEB option n\\xE0y s\\u1EBD b\\u1ECB thay \\u0111\\u1ED5i khi ch\\u1ECDn 1 country kh\\xE1c n\\xEAu ph\\u1EA3i t\\u1EA1o l\\u1EA1i 1 option m\\xF3i t\\u01B0\\u01A1ng \\u1EE9ng v\\u1EDBi \\u0111\\u1EA5t n\\u01B0\\u1EDBc v\\u1EEBa m\\u1EDBi l\\u1EF1a ch\\u1ECDn\", /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LineChart, \"s6cBWKTvBu9UO+ZhJ7hZQa7wmUE=\");\n\n_c = LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/tranq/Downloads/covid-19-tracking-main/covid_19_ProjectFE2/src/components/Charts/LineChart/index.js"],"names":["React","useEffect","useState","Highcharts","HighchartsReact","moment","Button","ButtonGroup","generateOptions","data","categories","map","item","Date","format","chart","height","title","text","xAxis","crosshair","colors","yAxis","min","labels","align","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","name","Confirmed","LineChart","options","setOptions","reportType","setReportType","console","log","customData","slice","Math","max","length","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport { Button, ButtonGroup } from '@material-ui/core';\n\nconst generateOptions = (data) => {\n  const categories = data.map((item) => moment(item.Date).format('DD/MM/YYYY'));\n\n  return {\n    chart: {\n      height: 500,\n    },\n    title: {\n      text: 'Tổng ca nhiễm',\n    },\n     // truc ngang\n    xAxis: {\n      categories: categories,\n      crosshair: true,\n    },\n    colors: ['#F3585B'],\n       // truc doc\n    yAxis: {\n      min: 0,\n      title: {\n        text: null,\n      },\n      labels: {\n        align: 'right',\n      },\n    },\n      // hien thi thong tin tren bieu do\n    tooltip: {\n      headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n      pointFormat:\n        '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n        '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\n      footerFormat: '</table>',\n      shared: true,\n      useHTML: true,\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0,\n      },\n    },\n       // du lieu truyen vo de hien thi tren linecharts\n    series: [\n      {\n        name: 'Tổng Ca nhiễm',\n        data: data.map((item) => item.Confirmed),\n      },\n    ],\n  };\n};\n\nexport default function LineChart({ data }) {\n  const [options, setOptions] = useState({});\n  const [reportType, setReportType] = useState('all');\n  console.log({ data });\n\n  useEffect(() => {\n    let customData = [];\n    switch (reportType) {\n      case 'all':\n        customData = data;\n        break;\n      case '30':\n        customData = data.slice(Math.max(data.length - 30, 1));\n        break;\n      case '7':\n        customData = data.slice(Math.max(data.length - 7, 1));\n        break;\n\n      default:\n        customData = data;\n        break;\n    }\n\n    setOptions(generateOptions(customData));\n  }, [data, reportType]);\n\n  return (\n    <>\n      <ButtonGroup\n        size='small'\n        aria-label='small outlined button group'\n        style={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Button\n          color={reportType === 'all' ? 'secondary' : ''}\n          onClick={() => setReportType('all')}\n        >\n          Tất cả\n        </Button>\n        <Button\n          color={reportType === '30' ? 'secondary' : ''}\n          onClick={() => setReportType('30')}\n        >\n          30 ngày\n        </Button>\n        <Button\n          color={reportType === '7' ? 'secondary' : ''}\n          onClick={() => setReportType('7')}\n        >\n          7 ngày\n        </Button>\n      </ButtonGroup>\n       dữ liệu từ option này sẽ bị thay đổi khi chọn 1 country khác \n             nêu phải tạo lại 1 option mói tương ứng với đất nước vừa mới lựa chọn\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}