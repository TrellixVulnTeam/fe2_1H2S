{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tranq\\\\Downloads\\\\covid-19-tracking-main\\\\covid-19-tracking-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { sortBy } from 'lodash';\nimport CountrySelector from './components/CountrySelector';\nimport { getCountries, getReportByCountry } from './components/apis';\nimport Summary from './components/Summary';\nimport Highlight from './components/Highlight';\nimport { Container, Typography } from '@material-ui/core';\nimport '@fontsource/roboto';\nimport moment from 'moment';\nimport 'moment/locale/vi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('vi');\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = React.useState([]);\n  const [selectedCountryId, setSelectedCountryId] = React.useState('');\n  const [report, setReport] = React.useState([]);\n  const [time, setTime] = React.useState(moment().format('LLL'));\n  useEffect(() => {\n    sett;\n    getCountries().then(res => {\n      const {\n        data\n      } = res;\n      const countries = sortBy(data, 'Country');\n      setCountries(countries);\n      setSelectedCountryId('vn');\n    });\n  }, []);\n  const handleOnChange = React.useCallback(e => {\n    setSelectedCountryId(e.target.value);\n  }, []);\n  useEffect(() => {\n    if (selectedCountryId) {\n      const selectedCountry = countries.find(country => country.ISO2 === selectedCountryId.toUpperCase());\n      getReportByCountry(selectedCountry.Slug).then(res => {\n        console.log('getReportByCountry', {\n          res\n        }); // remove last item = current date\n\n        res.data.pop();\n        setReport(res.data);\n      });\n    }\n  }, [selectedCountryId, countries]);\n  const summary = useMemo(() => {\n    if (report && report.length) {\n      const latestData = report[report.length - 1];\n      return [{\n        title: 'Số ca nhiễm',\n        count: latestData.Confirmed,\n        type: 'confirmed'\n      }, {\n        title: 'Khỏi',\n        count: latestData.Recovered,\n        type: 'recovered'\n      }, {\n        title: 'Tử vong',\n        count: latestData.Deaths,\n        type: 'death'\n      }];\n    }\n\n    return [];\n  }, [report]);\n  useEffect(() => {\n    setTimeout(() => {\n      console.log(\"ád\");\n      setTime(moment().format('LLL'));\n    }, 10);\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      children: \"S\\u1ED1 li\\u1EC7u COVID-19\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountrySelector, {\n      handleOnChange: handleOnChange,\n      countries: countries,\n      value: selectedCountryId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Highlight, {\n      summary: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Summary, {\n      countryId: selectedCountryId,\n      report: report\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"BcFz/3/aQ+nBnaxPczZRvGhkSWg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/tranq/Downloads/covid-19-tracking-main/covid-19-tracking-main/src/App.js"],"names":["React","useEffect","useMemo","sortBy","CountrySelector","getCountries","getReportByCountry","Summary","Highlight","Container","Typography","moment","locale","App","countries","setCountries","useState","selectedCountryId","setSelectedCountryId","report","setReport","time","setTime","format","sett","then","res","data","handleOnChange","useCallback","e","target","value","selectedCountry","find","country","ISO2","toUpperCase","Slug","console","log","pop","summary","length","latestData","title","count","Confirmed","type","Recovered","Deaths","setTimeout","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport { sortBy } from 'lodash';\nimport CountrySelector from './components/CountrySelector';\nimport { getCountries, getReportByCountry } from './components/apis';\nimport Summary from './components/Summary';\nimport Highlight from './components/Highlight';\nimport { Container, Typography } from '@material-ui/core';\nimport '@fontsource/roboto';\nimport moment from 'moment';\nimport 'moment/locale/vi';\n\nmoment.locale('vi');\n\nconst App = () => {\n  const [countries, setCountries] = React.useState([]);\n  const [selectedCountryId, setSelectedCountryId] = React.useState('');\n  const [report, setReport] = React.useState([]);\n  const [time, setTime] = React.useState(moment().format('LLL'));\n\n  useEffect(() => {\n    sett\n    getCountries().then((res) => {\n      const { data } = res;\n      const countries = sortBy(data, 'Country');\n      setCountries(countries);\n      setSelectedCountryId('vn');\n    });\n  }, []);\n\n  const handleOnChange = React.useCallback((e) => {\n    setSelectedCountryId(e.target.value);\n  }, []);\n\n  useEffect(() => {\n    if (selectedCountryId) {\n      const selectedCountry = countries.find(\n        (country) => country.ISO2 === selectedCountryId.toUpperCase()\n      );\n      getReportByCountry(selectedCountry.Slug).then((res) => {\n        console.log('getReportByCountry', { res });\n        // remove last item = current date\n        res.data.pop();\n        setReport(res.data);\n      });\n    }\n  }, [selectedCountryId, countries]);\n\n  const summary = useMemo(() => {\n    if (report && report.length) {\n      const latestData = report[report.length - 1];\n      return [\n        {\n          title: 'Số ca nhiễm',\n          count: latestData.Confirmed,\n          type: 'confirmed',\n        },\n        {\n          title: 'Khỏi',\n          count: latestData.Recovered,\n          type: 'recovered',\n        },\n        {\n          title: 'Tử vong',\n          count: latestData.Deaths,\n          type: 'death',\n        },\n      ];\n    }\n    return [];\n  }, [report]);\n\n  useEffect(()=>{\n    setTimeout(()=>{\n      console.log(\"ád\");\n      setTime(moment().format('LLL'));\n    },10)\n  },[time]);\n\n  return (\n    <Container style={{ marginTop: 20 }}>\n      <Typography variant='h2' component='h2'>\n        Số liệu COVID-19\n      </Typography>\n      <Typography>{time}</Typography>\n      <CountrySelector\n        handleOnChange={handleOnChange}\n        countries={countries}\n        value={selectedCountryId}\n      />\n      <Highlight summary={summary} />\n      <Summary countryId={selectedCountryId} report={report} />\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}